{"version":3,"file":"static/js/186.52e40e8c.chunk.js","mappings":"wSAMMA,E,QAAQC,EAAAA,OAAa,CACzBC,QAAS,kCASEC,EAAa,mCAAG,oGACJH,EAAMI,IAAN,WART,uBAQkC,CAC9CC,OAAQ,CACNC,QAAS,sCAHc,cACrBC,EADqB,yBAMpBA,EAASC,KAAKC,SANM,2CAAH,qDASbC,EAAY,mCAAG,WAAMC,GAAN,uFACHX,EAAMI,IAAN,WAhBP,gBAgBkC,CAChDC,OAAQ,CACNC,QAAS,mCACTM,MAAOD,KAJe,cACpBJ,EADoB,yBAOnBA,EAASC,KAAKC,SAPK,2CAAH,sDAUZI,EAAU,mCAAG,WAAMC,GAAN,uFACDd,EAAMI,IAAN,iBAAoBU,GAAM,CAC/CT,OAAQ,CACNC,QAAS,sCAHW,cAClBC,EADkB,yBAMjBA,EAASC,MANQ,2CAAH,sDASVO,EAAU,mCAAG,WAAMD,GAAN,uFACDd,EAAMI,IAAN,iBAAoBU,EAApB,YAAkC,CACvDT,OAAQ,CACNC,QAAS,sCAHW,cAClBC,EADkB,yBAMjBA,EAASC,KAAKQ,MANG,2CAAH,sDASVC,EAAY,mCAAG,WAAMH,GAAN,uFACHd,EAAMI,IAAN,iBAAoBU,EAApB,YAAkC,CACvDT,OAAQ,CACNC,QAAS,sCAHa,cACpBC,EADoB,yBAMnBA,EAASC,KAAKC,SANK,2CAAH,qD,+IClDZS,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,uHASVE,EAAOF,EAAAA,EAAAA,GAAH,6CAIJG,EAAOH,EAAAA,EAAAA,GAAH,iD,kLCLJI,EAAU,WACrB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEOf,EAAAA,EAAAA,IAAaY,GAFpB,OAEVtB,EAFU,OAGhBmB,EAAUnB,GAHM,gDAKhBqB,EAAS,EAAD,IALQ,yDAAH,qDAQjBI,GACD,GAAE,CAACH,IAEAF,GACFM,EAAAA,GAAAA,MAAY,6CAEV,UAAC,KAAD,YACE,0BACE,SAAC,KAAD,OAEF,qEAMJ,SAAC,KAAD,UACqB,IAAlBR,EAAOS,QACN,SAAC,KAAD,UACGT,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASvB,EAApB,EAAoBA,GAApB,OACV,2BACE,wBAAKsB,GAAUA,KACf,uBAAIC,GAAWA,MAFRvB,EADC,OAQd,gFAIP,C","sources":["components/Api/Api.jsx","components/MovieList/MovieList.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n/*\n/**|======================================\n/**| Fetch Axios Library\n/**|======================================\n*/\nconst fetch = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\nconst popular = 'trending/movie/week';\nconst movieName = 'search/movie';\n/*\n/**|======================================\n/**| Export Fetch Results\n/**|======================================\n*/\nexport const popularMovies = async () => {\n  const response = await fetch.get(`/${popular}`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovies = async searchQuery => {\n  const response = await fetch.get(`/${movieName}`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchById = async id => {\n  const response = await fetch.get(`/movie/${id}`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n    },\n  });\n  return response.data;\n};\n\nexport const searchCast = async id => {\n  const response = await fetch.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n    },\n  });\n  return response.data.cast;\n};\n\nexport const searchReview = async id => {\n  const response = await fetch.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n    },\n  });\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: cornsilk;\n  &:hover,\n  &:focus {\n    color: coral;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  text-decoration: none;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { searchReview } from '../Api/Api';\nimport { Container } from '../Layout/Layout.styled';\nimport { List } from '../MovieList/MovieList.styled';\n/*\n/**|======================================\n/**| Export Reviews\n/**|======================================\n*/\nexport const Reviews = () => {\n  const [review, setReview] = useState([]);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReview = async () => {\n      try {\n        const response = await searchReview(movieId);\n        setReview(response);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchReview();\n  }, [movieId]);\n\n  if (error) {\n    toast.error('Sorry, something went wrong ðŸ˜ž');\n    return (\n      <Container>\n        <div>\n          <Toaster />\n        </div>\n        <p>Something went wrong... ðŸ˜ž</p>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      {review.length !== 0 ? (\n        <List>\n          {review.map(({ author, content, id }) => (\n            <li key={id}>\n              <h2>{author && author}</h2>\n              <p>{content && content}</p>\n            </li>\n          ))}\n        </List>\n      ) : (\n        <p>There are no reviews of this movie yet ðŸ˜ž</p>\n      )}\n    </Container>\n  );\n};\n"],"names":["fetch","axios","baseURL","popularMovies","get","params","api_key","response","data","results","searchMovies","searchQuery","query","searchById","id","searchCast","cast","searchReview","StyledLink","styled","Link","List","Item","Reviews","useState","review","setReview","error","setError","movieId","useParams","useEffect","fetchReview","toast","length","map","author","content"],"sourceRoot":""}