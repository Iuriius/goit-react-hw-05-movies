{"version":3,"file":"static/js/310.94ecc45b.chunk.js","mappings":"wSAMMA,E,QAAQC,EAAAA,OAAa,CACzBC,QAAS,kCASEC,EAAa,mCAAG,oGACJH,EAAMI,IAAN,WART,uBAQkC,CAC9CC,OAAQ,CACNC,QAAS,sCAHc,cACrBC,EADqB,yBAMpBA,EAASC,KAAKC,SANM,2CAAH,qDASbC,EAAY,mCAAG,WAAMC,GAAN,uFACHX,EAAMI,IAAN,WAhBP,gBAgBkC,CAChDC,OAAQ,CACNC,QAAS,mCACTM,MAAOD,KAJe,cACpBJ,EADoB,yBAOnBA,EAASC,KAAKC,SAPK,2CAAH,sDAUZI,EAAU,mCAAG,WAAMC,GAAN,uFACDd,EAAMI,IAAN,iBAAoBU,GAAM,CAC/CT,OAAQ,CACNC,QAAS,sCAHW,cAClBC,EADkB,yBAMjBA,EAASC,MANQ,2CAAH,sDASVO,EAAU,mCAAG,WAAMD,GAAN,uFACDd,EAAMI,IAAN,iBAAoBU,EAApB,YAAkC,CACvDT,OAAQ,CACNC,QAAS,sCAHW,cAClBC,EADkB,yBAMjBA,EAASC,KAAKQ,MANG,2CAAH,sDASVC,EAAY,mCAAG,WAAMH,GAAN,uFACHd,EAAMI,IAAN,iBAAoBU,EAApB,YAAkC,CACvDT,OAAQ,CACNC,QAAS,sCAHa,cACpBC,EADoB,yBAMnBA,EAASC,KAAKC,SANK,2CAAH,qD,wFC7CZS,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,UACGF,EAAUG,OAAS,EAChBH,EAAUI,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,MAAP,OACZ,SAAC,KAAD,WACE,SAAC,KAAD,CAAYC,GAAE,kBAAaX,GAAMY,MAAO,CAAEC,KAAMP,GAAhD,SACGI,KAFMV,EADC,IAOd,MAGT,C,+ICrBYc,EAAOC,EAAAA,EAAAA,GAAH,sBACJC,EAAOD,EAAAA,EAAAA,GAAH,sBACJE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,qB,8KCHVI,EAAOJ,EAAAA,EAAAA,KAAH,+GAOJK,EAAQL,EAAAA,EAAAA,MAAH,mSAYLM,EAASN,EAAAA,EAAAA,OAAH,kV,mBCVNO,EAAS,WACpB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAO1B,EAAP,KAAoB2B,EAApB,KACA,GAAkCD,EAAAA,EAAAA,UAAS,IAA3C,eAAOlB,EAAP,KAAkBoB,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM9B,EAAQ6B,EAAarC,IAAI,SAkB/B,OAXAuC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,uFACZhC,EADY,kEAIMF,EAAAA,EAAAA,IAAaE,GAJnB,OAIXL,EAJW,OAKjBgC,EAAahC,GALI,2CAAH,qDAOhBqC,GACD,GAAE,CAAChC,KAGF,UAAC,KAAD,YACE,UAACqB,EAAD,CAAMY,SAlBW,SAAAC,GACnBA,EAAMC,iBACNL,EAAgB,CAAE9B,MAAOD,GAC1B,EAeG,WACE,SAACuB,EAAD,CACEc,YAAY,uCACZC,KAAK,OACLC,SAAU,SAAAJ,GAAK,OAAIR,EAAeQ,EAAMK,OAAOC,MAAhC,KAEjB,SAACjB,EAAD,CAAQc,KAAK,SAAb,wBAEF,SAAC/B,EAAA,EAAD,CAAWC,UAAWA,MAG3B,C","sources":["components/Api/Api.jsx","components/MovieList/MovieList.jsx","components/MovieList/MovieList.styled.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n/*\n/**|======================================\n/**| Fetch Axios Library\n/**|======================================\n*/\nconst fetch = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\nconst popular = 'trending/movie/week';\nconst movieName = 'search/movie';\n/*\n/**|======================================\n/**| Export Fetch Results\n/**|======================================\n*/\nexport const popularMovies = async () => {\n  const response = await fetch.get(`/${popular}`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovies = async searchQuery => {\n  const response = await fetch.get(`/${movieName}`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchById = async id => {\n  const response = await fetch.get(`/movie/${id}`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n    },\n  });\n  return response.data;\n};\n\nexport const searchCast = async id => {\n  const response = await fetch.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n    },\n  });\n  return response.data.cast;\n};\n\nexport const searchReview = async id => {\n  const response = await fetch.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n    },\n  });\n  return response.data.results;\n};\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, StyledLink } from './MovieList.styled';\n/*\n/**|======================================\n/**| Export MovieList\n/**|======================================\n*/\nexport const MovieList = ({ movieList }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movieList.length > 0\n        ? movieList.map(({ id, title }) => (\n            <Item key={id}>\n              <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </StyledLink>\n            </Item>\n          ))\n        : null}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul``;\nexport const Item = styled.li``;\nexport const StyledLink = styled(Link)``;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 1rem;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  font-size: 1rem;\n  padding: 0.7rem;\n  border: 1px solid lightsteelblue;\n  background-color: SandyBrown;\n  border-radius: 10px;\n  border: none;\n  outline: none;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  width: 200px;\n  margin-left: 20px;\n  font-size: 1rem;\n  padding: 0.7rem;\n  background-color: Chocolate;\n  color: cornsilk;\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n  &:hover,\n  &:focus {\n    background-color: Sienna;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from '../../components/Api/Api';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { Form, Input, Button } from './Movies.styled';\nimport { Container } from '../../components/Layout/LayoutStyled';\n/*\n/**|======================================\n/**| Export Movies\n/**|======================================\n*/\nexport const Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: searchQuery });\n  };\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      if (!query) {\n        return;\n      }\n      const response = await searchMovies(query);\n      setMovieList(response);\n    };\n    fetchMovie();\n  }, [query]);\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Search your movie here ðŸ“½ \"\n          type=\"text\"\n          onChange={event => setSearchQuery(event.target.value)}\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      <MovieList movieList={movieList} />\n    </Container>\n  );\n};\n"],"names":["fetch","axios","baseURL","popularMovies","get","params","api_key","response","data","results","searchMovies","searchQuery","query","searchById","id","searchCast","cast","searchReview","MovieList","movieList","location","useLocation","length","map","title","to","state","from","List","styled","Item","StyledLink","Link","Form","Input","Button","Movies","useState","setSearchQuery","setMovieList","useSearchParams","searchParams","setSearchParams","useEffect","fetchMovie","onSubmit","event","preventDefault","placeholder","type","onChange","target","value"],"sourceRoot":""}