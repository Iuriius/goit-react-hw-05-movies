{"version":3,"file":"static/js/420.77fc6015.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","pages/MovieCard/MovieCard.jsx","pages/MovieCard/MovieCardStyled.js"],"sourcesContent":["import axios from 'axios';\n/*\n/**|======================================\n/**| Fetch Axios Library\n/**|======================================\n*/\nconst fetch = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\nconst popular = 'trending/movie/week';\nconst movieName = 'search/movie';\n/*\n/**|======================================\n/**| Export Fetch Results\n/**|======================================\n*/\nexport const popularMovies = async () => {\n  const response = await fetch.get(`/${popular}`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovies = async searchQuery => {\n  const response = await fetch.get(`/${movieName}`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchById = async id => {\n  const response = await fetch.get(`/movie/${id}`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n    },\n  });\n  return response.data;\n};\n\nexport const searchCast = async id => {\n  const response = await fetch.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n    },\n  });\n  return response.data.cast;\n};\n\nexport const searchReview = async id => {\n  const response = await fetch.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: '23220e7137d4edd367a9f0eb448d494f',\n    },\n  });\n  return response.data.results;\n};\n","import { useEffect, useState, useRef } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { searchById } from '../../components/Api/Api';\nimport { Container } from '../../components/Layout/LayoutStyled';\nimport {\n  Image,\n  Description,\n  Section,\n  CardWrapper,\n  GoBackLink,\n} from './MovieCardStyled';\nimport { StyledLink } from '../../components/Layout/LayoutStyled';\n/*\n/**|======================================\n/**| Export MovieCard\n/**|======================================\n*/\nexport const MovieCard = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [error, setError] = useState('');\n  const location = useLocation();\n  const refLocation = useRef(location.state?.from);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await searchById(movieId);\n        setMovieDetails(response);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  if (error) {\n    toast.error('Sorry, something went wrong ðŸ˜ž');\n    return (\n      <Container>\n        <div>\n          <Toaster />\n        </div>\n        <p>Something went wrong... ðŸ˜ž</p>\n      </Container>\n    );\n  }\n\n  if (!movieDetails) {\n    return (\n      <Container>\n        <p>There are no reviews of this movie yet ðŸ˜ž</p>\n      </Container>\n    );\n  }\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    movieDetails;\n\n  return (\n    <>\n      <Section>\n        <Container>\n          <GoBackLink to={refLocation.current ?? '/'}>Go back</GoBackLink>\n          <CardWrapper>\n            <Image\n              src={\n                poster_path && `https://image.tmdb.org/t/p/w500${poster_path}`\n              }\n              alt={title}\n            />\n            <Description>\n              <h2>{`${title}(${new Date(release_date).getFullYear()})`}</h2>\n              <p>User score: {Math.ceil(vote_average * 10)} %</p>\n              <h2>Overview</h2>\n              <p>{overview}</p>\n              <h2>Genres</h2>\n              <p>\n                {genres?.length > 0\n                  ? genres.map(genre => genre.name).join(' ')\n                  : '-'}\n              </p>\n            </Description>\n          </CardWrapper>\n        </Container>\n      </Section>\n      <Section>\n        <Container>\n          <StyledLink to={'cast'}>Cast</StyledLink>\n          <StyledLink to={`reviews`}>Reviews</StyledLink>\n        </Container>\n      </Section>\n      <Section>\n        <Outlet />\n      </Section>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section``;\nexport const CardWrapper = styled.div``;\nexport const Image = styled.img``;\nexport const Description = styled.div``;\nexport const GoBackLink = styled(NavLink)``;\n"],"names":["fetch","axios","baseURL","popularMovies","get","params","api_key","response","data","results","searchMovies","searchQuery","query","searchById","id","searchCast","cast","searchReview","MovieCard","movieId","useParams","useState","movieDetails","setMovieDetails","error","setError","location","useLocation","refLocation","useRef","state","from","useEffect","fetchMovie","toast","title","poster_path","release_date","vote_average","overview","genres","to","current","src","alt","Date","getFullYear","Math","ceil","length","map","genre","name","join","Section","styled","CardWrapper","Image","Description","GoBackLink","NavLink"],"sourceRoot":""}